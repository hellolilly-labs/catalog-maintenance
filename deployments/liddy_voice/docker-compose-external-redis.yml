# Docker Compose configuration using external Redis
# This version connects to Redis running on the host machine

services:
  voice-agent:
    build:
      context: ../..
      dockerfile: deployments/liddy_voice/Dockerfile
    image: voice-agent-test:local
    env_file:
      - ../../.env  # Use the root .env file
    ports:
      - "8081:8081"
    environment:
      # Core settings
      - ENV_TYPE=development  # Change to production when ready
      - STORAGE_PROVIDER=gcp
      - GOOGLE_CLOUD_PROJECT=laure-430512  # Your GCP project ID
      
      # LiveKit configuration (required)
      - LIVEKIT_URL=${LIVEKIT_URL}
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - LIVEKIT_PORT=8081
      
      # LLM API Keys (required)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      
      # Speech services (required)
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ELEVEN_API_KEY=${ELEVENLABS_API_KEY}
      
      # Model configuration
      - MODEL_NAME=gpt-4o-mini
      - FALLBACK_MODEL_NAME=gemini-2.0-flash-exp
      
      # Voice settings
      - VOICE_MODEL=eleven_flash_v2_5
      - VOICE_STABILITY=0.6
      - VOICE_SIMILARITY_BOOST=0.8
      - USE_NOISE_CANCELLATION=false
      
      # Storage buckets
      - STORAGE_BUCKET=liddy-conversations
      # Account storage bucket is determined by ENV_TYPE:
      # development → liddy-account-documents-dev
      # production → liddy-account-documents
      
      # Redis configuration - use host's Redis
      - REDIS_HOST=host.docker.internal  # Special Docker hostname for host access
      - REDIS_PORT=6379
      
      # Python optimizations
      - PYTHONFAULTHANDLER=1
      - PYTHONUNBUFFERED=1
      
    volumes:
      # Primary method: Mount GCP credentials from gcloud auth
      - ~/.config/gcloud:/home/appuser/.config/gcloud:ro
      # Cache directories to prevent filling container
      - voice-cache:/home/appuser/.cache
      # Alternative: If using service account key, uncomment below:
      # - ./service-account-key.json:/tmp/gcp-key.json:ro
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  voice-cache: